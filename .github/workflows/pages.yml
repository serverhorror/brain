# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Restore Node modules cache
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: |
            node_modules
            .next/*
            !.next/.next/cache
            !.next/.env.*
          key: ${{ runner.os }}-dendronv2-${{ hashFiles('**/yarn.lock', '**/package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: Restore Next cache
        uses: actions/cache@v2
        with:
          path: .next/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('.next/yarn.lock', '.next/package-lock.json') }}-${{ hashFiles('.next/**.[jt]s', '.next/**.[jt]sx') }}
      - name: Export notes
        run: npx dendron publish export --target github --yes
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload relevant files
          path: "docs"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
